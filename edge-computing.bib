
@article{nastic_serverless_2017,
	title = {A {Serverless} {Real}-{Time} {Data} {Analytics} {Platform} for {Edge} {Computing}},
	volume = {21},
	issn = {1089-7801},
	url = {http://ieeexplore.ieee.org/document/7994559/},
	doi = {10.1109/MIC.2017.2911430},
	language = {en},
	number = {4},
	urldate = {2018-09-21},
	journal = {IEEE Internet Computing},
	author = {Nastic, Stefan and Rausch, Thomas and Scekic, Ognjen and Dustdar, Schahram and Gusev, Marjan and Koteska, Bojana and Kostoska, Magdalena and Jakimovski, Boro and Ristov, Sasko and Prodan, Radu},
	year = {2017},
	pages = {64--71},
	file = {Nastic et al. - 2017 - A Serverless Real-Time Data Analytics Platform for.pdf:C\:\\Users\\Adriaan\\Zotero\\storage\\DVHTCUYA\\Nastic et al. - 2017 - A Serverless Real-Time Data Analytics Platform for.pdf:application/pdf}
}

@inproceedings{lynn_preliminary_2017,
	address = {Hong Kong},
	title = {A {Preliminary} {Review} of {Enterprise} {Serverless} {Cloud} {Computing} ({Function}-as-a-{Service}) {Platforms}},
	isbn = {978-1-5386-0692-6},
	url = {http://ieeexplore.ieee.org/document/8241104/},
	doi = {10.1109/CloudCom.2017.15},
	abstract = {In line with cloud computing emergence as the dominant enterprise computing paradigm, our conceptualization of the cloud computing reference architecture and service construction has also evolved. For example, to address the need for cost reduction and rapid provisioning, virtualization has moved beyond hardware to containers. More recently, serverless computing or Function-as-a-Service has been presented as a means to introduce further cost-efficiencies, reduce configuration and management overheads, and rapidly increase an application’s ability to speed up, scale up and scale down in the cloud. The potential of this new computation model is reflected in the introduction of serverless computing platforms by the main hyperscale cloud service providers. This paper provides an overview and multi-level feature analysis of seven enterprise serverless computing platforms. It reviews extant research on these platforms and identifies the emergence of AWS Lambda as a de facto base platform for research on enterprise serverless cloud computing. The paper concludes with a summary of avenues for further research.},
	language = {en},
	urldate = {2018-09-26},
	booktitle = {2017 {IEEE} {International} {Conference} on {Cloud} {Computing} {Technology} and {Science} ({CloudCom})},
	publisher = {IEEE},
	author = {Lynn, Theo and Rosati, Pierangelo and Lejeune, Arnaud and Emeakaroha, Vincent},
	month = dec,
	year = {2017},
	pages = {162--169},
	file = {Lynn et al. - 2017 - A Preliminary Review of Enterprise Serverless Clou.pdf:C\:\\Users\\Adriaan\\Zotero\\storage\\FFIRNRYJ\\Lynn et al. - 2017 - A Preliminary Review of Enterprise Serverless Clou.pdf:application/pdf}
}

@inproceedings{bonomi_fog_2012,
	address = {Helsinki, Finland},
	title = {Fog computing and its role in the internet of things},
	isbn = {978-1-4503-1519-7},
	url = {http://dl.acm.org/citation.cfm?doid=2342509.2342513},
	doi = {10.1145/2342509.2342513},
	abstract = {Fog Computing extends the Cloud Computing paradigm to the edge of the network, thus enabling a new breed of applications and services. Deﬁning characteristics of the Fog are: a) Low latency and location awareness; b) Wide-spread geographical distribution; c) Mobility; d) Very large number of nodes, e) Predominant role of wireless access, f) Strong presence of streaming and real time applications, g) Heterogeneity. In this paper we argue that the above characteristics make the Fog the appropriate platform for a number of critical Internet of Things (IoT) services and applications, namely, Connected Vehicle, Smart Grid , Smart Cities, and, in general, Wireless Sensors and Actuators Networks (WSANs).},
	language = {en},
	urldate = {2018-09-27},
	booktitle = {Proceedings of the first edition of the {MCC} workshop on {Mobile} cloud computing - {MCC} '12},
	publisher = {ACM Press},
	author = {Bonomi, Flavio and Milito, Rodolfo and Zhu, Jiang and Addepalli, Sateesh},
	year = {2012},
	pages = {13},
	file = {Bonomi et al. - 2012 - Fog computing and its role in the internet of thin.pdf:C\:\\Users\\Adriaan\\Zotero\\storage\\X7W7BCJD\\Bonomi et al. - 2012 - Fog computing and its role in the internet of thin.pdf:application/pdf}
}

@article{shi_edge_2016,
	title = {Edge {Computing}: {Vision} and {Challenges}},
	volume = {3},
	issn = {2327-4662},
	shorttitle = {Edge {Computing}},
	url = {http://ieeexplore.ieee.org/document/7488250/},
	doi = {10.1109/JIOT.2016.2579198},
	abstract = {The proliferation of Internet of Things (IoT) and the success of rich cloud services have pushed the horizon of a new computing paradigm, edge computing, which calls for processing the data at the edge of the network. Edge computing has the potential to address the concerns of response time requirement, battery life constraint, bandwidth cost saving, as well as data safety and privacy. In this paper, we introduce the deﬁnition of edge computing, followed by several case studies, ranging from cloud ofﬂoading to smart home and city, as well as collaborative edge to materialize the concept of edge computing. Finally, we present several challenges and opportunities in the ﬁeld of edge computing, and hope this paper will gain attention from the community and inspire more research in this direction.},
	language = {en},
	number = {5},
	urldate = {2018-09-27},
	journal = {IEEE Internet of Things Journal},
	author = {Shi, Weisong and Cao, Jie and Zhang, Quan and Li, Youhuizi and Xu, Lanyu},
	month = oct,
	year = {2016},
	pages = {637--646},
	file = {Shi et al. - 2016 - Edge Computing Vision and Challenges.pdf:C\:\\Users\\Adriaan\\Zotero\\storage\\G4BZFDKE\\Shi et al. - 2016 - Edge Computing Vision and Challenges.pdf:application/pdf}
}

@incollection{de_paoli_empowering_2017,
	address = {Cham},
	title = {Empowering {Low}-{Latency} {Applications} {Through} a {Serverless} {Edge} {Computing} {Architecture}},
	volume = {10465},
	isbn = {978-3-319-67261-8 978-3-319-67262-5},
	url = {http://link.springer.com/10.1007/978-3-319-67262-5_15},
	abstract = {The exponential increase of the data generated by pervasive and mobile devices requires disrupting approaches for the realization of emerging mobile and IoT applications. Although cloud computing provides virtually unlimited computational resources, low-latency applications cannot aﬀord the high latencies introduced by sending and retrieving data from/to the cloud. In this scenario, edge computing appears as a promising solution by bringing computation and data near to users and devices. However, the resource-ﬁnite nature of edge servers constrains the possibility of deploying full applications on them. To cope with these problems, we propose a serverless architecture at the edge, bringing a highly scalable, intelligent and cost-eﬀective use of edge infrastructure’s resources with minimal conﬁguration and operation eﬀorts. The feasibility of our approach is shown through an augmented reality use case for mobile devices, in which we oﬄoad computation and data intensive tasks from the devices to serverless functions at the edge, outperforming the cloud alternative up to 80\% in terms of throughput and latency.},
	language = {en},
	urldate = {2018-09-27},
	booktitle = {Service-{Oriented} and {Cloud} {Computing}},
	publisher = {Springer International Publishing},
	author = {Baresi, Luciano and Filgueira Mendonça, Danilo and Garriga, Martin},
	editor = {De Paoli, Flavio and Schulte, Stefan and Broch Johnsen, Einar},
	year = {2017},
	doi = {10.1007/978-3-319-67262-5_15},
	pages = {196--210},
	annote = {Suggests creating local clouds which support},
	file = {Baresi et al. - 2017 - Empowering Low-Latency Applications Through a Serv.pdf:C\:\\Users\\Adriaan\\Zotero\\storage\\Y8TBQ4ZA\\Baresi et al. - 2017 - Empowering Low-Latency Applications Through a Serv.pdf:application/pdf}
}

@article{shi_promise_2016,
	title = {The {Promise} of {Edge} {Computing}},
	volume = {49},
	issn = {0018-9162},
	url = {http://ieeexplore.ieee.org/document/7469991/},
	doi = {10.1109/MC.2016.145},
	language = {en},
	number = {5},
	urldate = {2018-09-27},
	journal = {Computer},
	author = {Shi, Weisong and Dustdar, Schahram},
	month = may,
	year = {2016},
	pages = {78--81},
	file = {Shi and Dustdar - 2016 - The Promise of Edge Computing.pdf:C\:\\Users\\Adriaan\\Zotero\\storage\\MSDLV49R\\Shi and Dustdar - 2016 - The Promise of Edge Computing.pdf:application/pdf}
}

@inproceedings{chun_clonecloud:_2011,
	address = {Salzburg, Austria},
	title = {{CloneCloud}: elastic execution between mobile device and cloud},
	isbn = {978-1-4503-0634-8},
	shorttitle = {{CloneCloud}},
	url = {http://portal.acm.org/citation.cfm?doid=1966445.1966473},
	doi = {10.1145/1966445.1966473},
	abstract = {Mobile applications are becoming increasingly ubiquitous and provide ever richer functionality on mobile devices. At the same time, such devices often enjoy strong connectivity with more powerful machines ranging from laptops and desktops to commercial clouds. This paper presents the design and implementation of CloneCloud, a system that automatically transforms mobile applications to beneﬁt from the cloud. The system is a ﬂexible application partitioner and execution runtime that enables unmodiﬁed mobile applications running in an application-level virtual machine to seamlessly off-load part of their execution from mobile devices onto device clones operating in a computational cloud. CloneCloud uses a combination of static analysis and dynamic proﬁling to partition applications automatically at a ﬁne granularity while optimizing execution time and energy use for a target computation and communication environment. At runtime, the application partitioning is effected by migrating a thread from the mobile device at a chosen point to the clone in the cloud, executing there for the remainder of the partition, and re-integrating the migrated thread back to the mobile device. Our evaluation shows that CloneCloud can adapt application partitioning to different environments, and can help some applications achieve as much as a 20x execution speed-up and a 20-fold decrease of energy spent on the mobile device.},
	language = {en},
	urldate = {2018-09-28},
	booktitle = {Proceedings of the sixth conference on {Computer} systems - {EuroSys} '11},
	publisher = {ACM Press},
	author = {Chun, Byung-Gon and Ihm, Sunghwan and Maniatis, Petros and Naik, Mayur and Patti, Ashwin},
	year = {2011},
	pages = {301},
	file = {Chun et al. - 2011 - CloneCloud elastic execution between mobile devic.pdf:C\:\\Users\\Adriaan\\Zotero\\storage\\SQRNZBJJ\\Chun et al. - 2011 - CloneCloud elastic execution between mobile devic.pdf:application/pdf}
}

@inproceedings{glikson_deviceless_2017,
	address = {Haifa, Israel},
	title = {Deviceless edge computing: extending serverless computing to the edge of the network},
	isbn = {978-1-4503-5035-8},
	shorttitle = {Deviceless edge computing},
	url = {http://dl.acm.org/citation.cfm?doid=3078468.3078497},
	doi = {10.1145/3078468.3078497},
	abstract = {The serverless paradigm has been rapidly adopted by developers of cloud-native applications, mainly because it relieves them from the burden of provisioning, scaling and operating the underlying infrastructure. In this paper, we propose a novel computing paradigm – Deviceless Edge Computing that extends the serverless paradigm to the edge of the network, enabling IoT and Edge devices to be seamlessly integrated as application execution infrastructure. We also discuss open challenges to realize Deviceless Edge Computing, based on our experience in prototyping a deviceless platform.},
	language = {en},
	urldate = {2018-09-28},
	booktitle = {Proceedings of the 10th {ACM} {International} {Systems} and {Storage} {Conference} on   - {SYSTOR} '17},
	publisher = {ACM Press},
	author = {Glikson, Alex and Nastic, Stefan and Dustdar, Schahram},
	year = {2017},
	pages = {1--1},
	file = {Glikson et al. - 2017 - Deviceless edge computing extending serverless co.pdf:C\:\\Users\\Adriaan\\Zotero\\storage\\N6SIZY9M\\Glikson et al. - 2017 - Deviceless edge computing extending serverless co.pdf:application/pdf}
}

@article{taleb_multi-access_2017,
	title = {On {Multi}-{Access} {Edge} {Computing}: {A} {Survey} of the {Emerging} 5G {Network} {Edge} {Cloud} {Architecture} and {Orchestration}},
	volume = {19},
	issn = {1553-877X},
	shorttitle = {On {Multi}-{Access} {Edge} {Computing}},
	url = {http://ieeexplore.ieee.org/document/7931566/},
	doi = {10.1109/COMST.2017.2705720},
	abstract = {Multi-access edge computing (MEC) is an emerging ecosystem, which aims at converging telecommunication and IT services, providing a cloud computing platform at the edge of the radio access network. MEC offers storage and computational resources at the edge, reducing latency for mobile end users and utilizing more efﬁciently the mobile backhaul and core networks. This paper introduces a survey on MEC and focuses on the fundamental key enabling technologies. It elaborates MEC orchestration considering both individual services and a network of MEC platforms supporting mobility, bringing light into the different orchestration deployment options. In addition, this paper analyzes the MEC reference architecture and main deployment scenarios, which offer multitenancy support for application developers, content providers, and third parties. Finally, this paper overviews the current standardization activities and elaborates further on open research challenges.},
	language = {en},
	number = {3},
	urldate = {2018-09-28},
	journal = {IEEE Communications Surveys \& Tutorials},
	author = {Taleb, Tarik and Samdanis, Konstantinos and Mada, Badr and Flinck, Hannu and Dutta, Sunny and Sabella, Dario},
	year = {2017},
	pages = {1657--1681},
	file = {Taleb et al. - 2017 - On Multi-Access Edge Computing A Survey of the Em.pdf:C\:\\Users\\Adriaan\\Zotero\\storage\\GEZ696JH\\Taleb et al. - 2017 - On Multi-Access Edge Computing A Survey of the Em.pdf:application/pdf}
}

@inproceedings{lara_poster_2016,
	title = {Poster {Abstract}: {Hierarchical} {Serverless} {Computing} for the {Mobile} {Edge}},
	shorttitle = {Poster {Abstract}},
	doi = {10.1109/SEC.2016.37},
	abstract = {EdgeScale is a new platform that leverages serveless cloud computing to enable storage and processing on a hierarchy of data centers positioned over the geographic span of a network between the end-user device and the traditional wide-area cloud datacenter. EdgeScale applications are structured as lightweight stateless handlers that can be rapidely instantiated on demand. EdgeScale provides a scalable and persistent storage service that automatically migrates application state across the data center hierarchy to optimize access latency and reduce bandwidth consumption.},
	booktitle = {2016 {IEEE}/{ACM} {Symposium} on {Edge} {Computing} ({SEC})},
	author = {Lara, E. d and Gomes, C. S. and Langridge, S. and Mortazavi, S. H. and Roodi, M.},
	month = oct,
	year = {2016},
	keywords = {Bandwidth, cloud computing, Cloud computing, data processing, edge computing, access latency optimization, bandwidth consumption, cloudlets, Computer architecture, computer centres, data center hierarchy, data storage, EdgeScale applications, end-user device, geographic span, Hardware, hierarchical serverless cloud computing, lightweight stateless handlers, Mobile communication, mobile computing, mobile edge, serverless computing, Servers, storage management, storage service},
	pages = {109--110}
}

@inproceedings{xu_eaaas:_2017,
	address = {Honolulu, HI, USA},
	title = {{EAaaS}: {Edge} {Analytics} as a {Service}},
	isbn = {978-1-5386-0752-7},
	shorttitle = {{EAaaS}},
	url = {http://ieeexplore.ieee.org/document/8029781/},
	doi = {10.1109/ICWS.2017.130},
	abstract = {In the Internet of Things (IoT) era, with ubiquitous remote sensing devices and other diverse data sources, nearly everything can forward voluminous data continuously, in realtime, which drives demand to perform real-time analytics on uninterrupted IoT data flows. The typical resultant approach is a cloud-centered architecture providing an analytic service for real-time IoT data processing. However, a cloud-centered IoT analytic service cannot guarantee real-time responsiveness has a high-fee pay-as-you-go business model, and opens data privacy concerns. Hence, it becomes rational to shift analytic workloads to the edge and provide a management service for edge analysis. Existing work on providing edge analytics as a service encountered challenges such as lacking a lightweight way to compose IoT applications based on multiple service providers, lacking a flexible and unified way to define domainspecific analytic logic, and maintaining efficiency when processing data on a resource-limited edge. This paper presents EAaaS, a scalable analytic service for enabling realtime edge analytics in IoT scenarios. In this work, we propose a unified rule-based analytic model to ease user's programming efforts in specifying rule-based analytic logic. Moreover, we also designed and implemented a high performance edge engine to apply rule-based analytic on incoming device data streams. To simplify the access to EAaaS service, a group of RESTful web interfaces is also designed for edge analytic management on cloud and flexible composition with external services. EAaaS is implemented as a part of IBM Watson IoT Platform, which is a cloud service for elementary IoT application development on IBM Bluemix cloud announced by IBM recently. We have conducted proof of correctness (PoC) of EAaaS with customers from boat racing in the U.S. and collected valuable feedback from customers for further enhancement of EAaaS’s flexibility and usability.},
	language = {en},
	urldate = {2018-09-30},
	booktitle = {2017 {IEEE} {International} {Conference} on {Web} {Services} ({ICWS})},
	publisher = {IEEE},
	author = {Xu, Xiaomin and Huang, Sheng and Feagan, Lance and Chen, Yaoliang and Qiu, Yunjie and Wang, Yu},
	month = jun,
	year = {2017},
	pages = {349--356},
	file = {Xu et al. - 2017 - EAaaS Edge Analytics as a Service.pdf:C\:\\Users\\Adriaan\\Zotero\\storage\\RN3478ZH\\Xu et al. - 2017 - EAaaS Edge Analytics as a Service.pdf:application/pdf}
}

@incollection{baldini_serverless_2017,
	title = {Serverless {Computing}: {Current} {Trends} and {Open} {Problems}},
	isbn = {978-981-10-5025-1},
	shorttitle = {Serverless {Computing}},
	abstract = {Serverless computing has emerged as a new compelling paradigm for the deployment of applications and services. It represents an evolution of cloud programming models, abstractions, and platforms, and is a testament to the maturity and wide adoption of cloud technologies. In this chapter, we survey existing serverless platforms from industry, academia, and open source projects, identify key characteristics and use cases, and describe technical challenges and open problems.},
	author = {Baldini, Ioana and Castro, Paul and Chang, Kerry and Cheng, Perry and Fink, Stephen and Ishakian, Vatche and Mitchell, Nick and Muthusamy, Vinod and Rabbah, Rodric and Slominski, Aleksander and Suter, Philippe},
	month = jan,
	year = {2017},
	pages = {1--20},
	file = {Full Text PDF:C\:\\Users\\Adriaan\\Zotero\\storage\\YHI9J7EF\\Baldini et al. - 2017 - Serverless Computing Current Trends and Open Prob.pdf:application/pdf}
}

@article{mohanty_evaluation_nodate,
	title = {An evaluation of open source serverless computing frameworks},
	abstract = {Recent advancements in virtualization and software architecture have led to the new paradigm of serverless computing, which allows developers to deploy applications as stateless functions without worrying about the underlying infrastructure. Accordingly, a serverless platform handles the lifecycle, execution and scaling of the actual functions; these need to run only when invoked or triggered by an event. Thus, the major beneﬁts of serverless computing are low operational concerns and efﬁcient resource management and utilization. Serverless computing is currently offered by several public cloud service providers. However, there are certain limitations on the public cloud platforms, such as vendor lock-in and restrictions on the computation of the functions. Open source serverless frameworks are a promising solution to avoid these limitations and bring the power of serverless computing to on-premise deployments. However, these frameworks have not been evaluated before. Thus, we carry out a comprehensive feature comparison of popular open source serverless computing frameworks. We then evaluate the performance of selected frameworks: Fission, Kubeless and OpenFaaS. Speciﬁcally, we characterize the response time and ratio of successfully received responses under different loads and provide insights into the design choices of each framework.},
	language = {en},
	author = {Mohanty, Sunil Kumar and Premsankar, Gopika and Francesco, Mario Di},
	pages = {7},
	file = {Mohanty et al. - An evaluation of open source serverless computing .pdf:C\:\\Users\\Adriaan\\Zotero\\storage\\ZGQL9E84\\Mohanty et al. - An evaluation of open source serverless computing .pdf:application/pdf}
}

@inproceedings{adzic_serverless_2017,
	address = {Paderborn, Germany},
	title = {Serverless computing: economic and architectural impact},
	isbn = {978-1-4503-5105-8},
	shorttitle = {Serverless computing},
	url = {http://dl.acm.org/citation.cfm?doid=3106237.3117767},
	doi = {10.1145/3106237.3117767},
	abstract = {Amazon Web Services unveiled their ‘Lambda’ platform in late 2014. Since then, each of the major cloud computing infrastructure providers has released services supporting a similar style of deployment and operation, where rather than deploying and running monolithic services, or dedicated virtual machines, users are able to deploy individual functions, and pay only for the time that their code is actually executing. These technologies are gathered together under the marketing term ‘serverless’ and the providers suggest that they have the potential to significantly change how client/server applications are designed, developed and operated.},
	language = {en},
	urldate = {2018-10-17},
	booktitle = {Proceedings of the 2017 11th {Joint} {Meeting} on {Foundations} of {Software} {Engineering}  - {ESEC}/{FSE} 2017},
	publisher = {ACM Press},
	author = {Adzic, Gojko and Chatley, Robert},
	year = {2017},
	pages = {884--889},
	file = {Adzic and Chatley - 2017 - Serverless computing economic and architectural i.pdf:C\:\\Users\\Adriaan\\Zotero\\storage\\M3LDGKP6\\Adzic and Chatley - 2017 - Serverless computing economic and architectural i.pdf:application/pdf}
}

@misc{amazon_aws_nodate,
	title = {{AWS} {Greengrass} - {Amazon} {Web} {Services}},
	url = {https://aws.amazon.com/greengrass/},
	language = {en-US},
	urldate = {2018-10-29},
	journal = {Amazon Web Services, Inc.},
	author = {Amazon},
	file = {Snapshot:C\:\\Users\\Adriaan\\Zotero\\storage\\8CKQ8PW9\\greengrass.html:text/html}
}